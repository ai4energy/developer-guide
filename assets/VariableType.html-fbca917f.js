import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as e}from"./app-d2551be0.js";const p={},t=e(`<h2 id="变量类型" tabindex="-1"><a class="header-anchor" href="#变量类型" aria-hidden="true">#</a> 变量类型</h2><p>在一个数字孪生项目中，首先可用的实体组是“变量类型”。变量类型有如下一些字段：</p><p>name, Quantity type, Unit, Delta, Default Value, Min Value, Max Value.</p><p>所选择的计量单位还决定了Quantity type，不能独立选择。</p><p>其中Delta用来标记这个变量是否是差值，如果是，就会忽略偏移量。（例如，对于温度差异，需要在转换为开尔文时忽略摄氏度的偏移量）。</p><p>基于文本或“无单位”的变量类型携带的信息要少得多：只包括默认值和边界值，以及一个可选的纯文本计量单位，仅用于可读性，不参与任何单位转换的计算。</p><p>在modelica中，实际上也是存在变量类型定义的。比如说modelica的标准库有个Units包。在其SI里，定义了一系列的type，实际就是变量类型。比如：</p><div class="language-modelica line-numbers-mode" data-ext="modelica"><pre class="language-modelica"><code>type Angle = Real (
    final quantity=&quot;Angle&quot;,
    final unit=&quot;rad&quot;,
    displayUnit=&quot;deg&quot;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代表Angle是个类型，实际上就是实数变量，单位是rad。显式单位是deg。</p><p>在三相交流电里头，还涉及到了复数。通常不用。暂时忽略。</p><p>此外Modelica的标准库的Units还定义非国际单位制的单位，以及单位转换。</p><h2 id="变量类型-1" tabindex="-1"><a class="header-anchor" href="#变量类型-1" aria-hidden="true">#</a> 变量类型</h2><p>在流程仿真中，由模型方程计算的所有量都是变量；变量始终是实数（连续）数字，并且必须始终被赋予变量类型。</p><p>变量类型包含以下信息：</p><ol><li>名称，可以在全局范围内引用此类型。</li><li>变量类型的默认值。这个值将用作涉及此类型变量的任何迭代计算的初始猜测，除非为单个变量覆盖了它，或者从先前的计算中获得了更好的猜测。</li><li>变量类型的值的上下限。涉及此类型变量的任何计算必须得出在这些上下限内的结果。这些限制可以用于确保计算结果在物理上有意义。同样，这些限制可以针对单个此类型的变量进行覆盖。</li><li>可选的测量单位。建议提供这一信息，以提高模型的可读性。</li></ol><p>我们可以使用如下的命令创建变量类型表:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建变量类型表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> variable_types <span class="token punctuation">(</span>
    id <span class="token keyword">SERIAL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    symbol <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token comment">-- 变量类型的符号</span>
    abbreviation <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 变量类型的简写</span>
    unit_id <span class="token keyword">INTEGER</span> <span class="token keyword">REFERENCES</span> units<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 关联的单位ID</span>
    min_value <span class="token keyword">DOUBLE</span> <span class="token keyword">PRECISION</span><span class="token punctuation">,</span>  <span class="token comment">-- 最小值</span>
    max_value <span class="token keyword">DOUBLE</span> <span class="token keyword">PRECISION</span><span class="token punctuation">,</span>  <span class="token comment">-- 最大值</span>
    default_value <span class="token keyword">DOUBLE</span> <span class="token keyword">PRECISION</span><span class="token punctuation">,</span>  <span class="token comment">-- 默认值</span>
    doc <span class="token keyword">TEXT</span><span class="token punctuation">,</span>  <span class="token comment">-- 英文文档或描述</span>
    doc_zh <span class="token keyword">TEXT</span>  <span class="token comment">-- 简体中文文档或描述</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样的，针对每一条记录，我们可以生成一个julia类型（结构体），并生成一个该类型的实例（以const global的形式），export出来备用。</p>`,18),l=[t];function o(i,c){return s(),a("div",null,l)}const r=n(p,[["render",o],["__file","VariableType.html.vue"]]);export{r as default};
